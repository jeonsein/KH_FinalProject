<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">
   
   <!-- Root Context: defines shared resources visible to all other web components -->


   <bean id="hikariConfig" class="com.zaxxer.hikari.HikariConfig">
      <!-- JDBC 연결 생성을 위한 필수 4가지 정보 -->
      <property name="driverClassName" value="net.sf.log4jdbc.sql.jdbcapi.DriverSpy" />
      <property name="jdbcUrl" value="jdbc:log4jdbc:oracle:thin:@mymg_high?TNS_ADMIN=C:/opt/OracleCloudWallet/VFX" />
      <property name="username" value="scott" />
      <property name="password" value="Oracle12345678" />

      <property name="maximumPoolSize" value="10" />
      <property name="minimumIdle" value="2" />

      <property name="idleTimeout" value="10000" /> <!--10초 지났을 때 maximum에서 minimum으로! -->
      <!-- 개별 커넥션에 sql처리 요청이 들어오지 않으면 죽여라! -->
      
      <property name="connectionTimeout" value="2000" />
      
      <property name="connectionTestQuery" value="SELECT 1 FROM dual" /> <!--항상 Connection pool 내의 pool들을 유지하는데에 필요함! pool이 살아있는지 죽었는지 찾아냄! -->
      <!-- 아무 의미 없는 쿼리지만 현재 풀 내부의 쿼리 처리가 가능한건지 확인함. -->
      
      <property name="connectionInitSql" value="SELECT 1 FROM dual" /> <!--Connection이 만들어진 직후에 SQl 정상처리 가능한지 확인-->
      <property name="dataSourceJNDI" value="jdbc/HikariCP" />
      <property name="poolName" value="* HikariDataSource *" />
   </bean>

   <bean
      id="hikariDataSource"
      class="com.zaxxer.hikari.HikariDataSource"
      destroy-method="close">
      <constructor-arg ref="hikariConfig" />
   </bean>

   <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
      <property name="dataSource" ref="hikariDataSource" />
      <!-- <property name="mapperLocations" value="classpath*:mappers/SQL*.xml" /> -->
      <!-- 여기다가 쓰면 sql 문장을 찾는 주도권이 마이바티스에게 넘어가기 떄문에 쓰지말 것 -->
      <property name="configLocation" value="classpath:mybatis-config.xml" />
      <!-- 마이바티스 설정파일에 메퍼 인터페이스든 메퍼 xml파일이든 다 등록해서 쓸 수 있다 -->
   </bean>

<!-- 이 패키지 밑에 있는걸 매퍼 레지스트리에 매퍼 인터페이스로 자동 등록해줌!! -->
   <mybatis-spring:scan base-package="org.zerock.myapp.mapper" />
   
   <!-- Auto-Registration As A Bean -->
   <context:component-scan base-package="org.zerock.myapp.service" />
   <context:component-scan base-package="org.zerock.myapp.persistence" />
   <context:component-scan base-package="org.zerock.myapp.exception" />
   
</beans>